<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>考拉动效</title>
  <subtitle>考拉前端团队 KAOLA-FED</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://motionvisions.github.io/"/>
  <updated>2016-12-07T02:09:02.000Z</updated>
  <id>https://motionvisions.github.io/</id>
  
  <author>
    <name>KAOLA FED</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Canvas上绘制动画</title>
    <link href="https://motionvisions.github.io/2016/12/07/Canvas%E4%B8%8A%E7%BB%98%E5%88%B6%E5%8A%A8%E7%94%BB/"/>
    <id>https://motionvisions.github.io/2016/12/07/Canvas上绘制动画/</id>
    <published>2016-12-07T02:07:49.000Z</published>
    <updated>2016-12-07T02:09:02.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Canvas-drawImage"><a href="#Canvas-drawImage" class="headerlink" title="Canvas.drawImage"></a>Canvas.drawImage</h4><p>我们知道我们需要调用drawImage 在画布上去绘制一个图片，那如果我们要绘制一个动图我们需要如何实现呢？我们要获取精灵图片对应的那一帧，然后在画布上绘制。每次绘制一帧，我们需要先清空原先画布上的内容</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> ctx.drawImage(iamge. sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight)</div></pre></td></tr></table></figure>
<p><img src="https://mdn.mozillademos.org/files/225/Canvas_drawimage.jpg" alt=""></p>
<p>注意: sx,sy 是指源精灵图片获取的位置， dx,dy 指的是在画布上需要对应的位置，所以我们写一个Sprite 类，这个类一般要描述下面这些信息</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> bird_opt = &#123;</div><div class="line">            <span class="attr">image</span>: image,</div><div class="line">            <span class="attr">startX</span>: <span class="number">100</span>, <span class="comment">//绘制的起始坐标X</span></div><div class="line">            startY: <span class="number">100</span>, <span class="comment">//绘制的起始坐标Y</span></div><div class="line">            rect: &#123;<span class="attr">x</span>:<span class="number">0</span>,<span class="attr">y</span>:<span class="number">0</span>,<span class="attr">w</span>:<span class="number">86</span>,<span class="attr">h</span>:<span class="number">60</span>&#125;,</div><div class="line">            <span class="attr">frames</span>: [ <span class="comment">//精灵动画每一帧的相关信息</span></div><div class="line">                        &#123;<span class="attr">x</span>:<span class="number">0</span>,<span class="attr">y</span>:<span class="number">0</span>,<span class="attr">w</span>:<span class="number">86</span>,<span class="attr">h</span>:<span class="number">60</span>&#125;,</div><div class="line">                        &#123;<span class="attr">x</span>:<span class="number">0</span>,<span class="attr">y</span>:<span class="number">60</span>,<span class="attr">w</span>:<span class="number">86</span>,<span class="attr">h</span>:<span class="number">60</span>&#125;,</div><div class="line">                        &#123;<span class="attr">x</span>:<span class="number">0</span>,<span class="attr">y</span>:<span class="number">120</span>,<span class="attr">w</span>:<span class="number">86</span>,<span class="attr">h</span>:<span class="number">60</span>&#125;</div><div class="line">                    ]</div><div class="line">        &#125;;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sprite</span>(<span class="params">opt</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> sprite_proto = &#123;&#125;;</div><div class="line">         sprite_proto.current_frame_index = <span class="number">0</span>;</div><div class="line">         sprite_proto.image = opt.image;</div><div class="line">         sprite_proto.rect = opt.rect;</div><div class="line">         sprite_proto.frames = opt.frames;</div><div class="line">         sprite_proto.startX = opt.startX;</div><div class="line">         sprite_proto.startY = opt.startY;</div><div class="line"></div><div class="line">         sprite_proto.getNextFrame = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> curFrame = <span class="keyword">this</span>.frames[<span class="keyword">this</span>.current_frame_index];</div><div class="line">            <span class="keyword">this</span>.current_frame_index++;</div><div class="line"></div><div class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.current_frame_index ==  <span class="keyword">this</span>.frames.length) </div><div class="line">            <span class="keyword">this</span>.current_frame_index = <span class="number">0</span>;</div><div class="line"></div><div class="line">            <span class="keyword">return</span> curFrame;                </div><div class="line">         &#125;</div><div class="line"></div><div class="line">         <span class="keyword">return</span> sprite_proto;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>我们再创建一个绘制画布类DrawCanvas, 主要需要两个方法，一个是renderFrame（绘制精灵的某帧）, 一个是清空画布clear</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">DrawCanvas</span>(<span class="params">opt</span>)</span>&#123;</div><div class="line">        <span class="keyword">this</span>.context = opt.context;</div><div class="line">        <span class="keyword">this</span>.width = opt.width;</div><div class="line">        <span class="keyword">this</span>.height = opt.height;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    DrawCanvas.prototype.renderFrame = <span class="function"><span class="keyword">function</span>(<span class="params">sprite</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> frame = sprite.getNextFrame();</div><div class="line"></div><div class="line">        <span class="keyword">this</span>.context.drawImage(</div><div class="line">                sprite.image,</div><div class="line">                frame.x,</div><div class="line">                frame.y,</div><div class="line">                frame.w,</div><div class="line">                frame.h,</div><div class="line">                sprite.startX,</div><div class="line">                sprite.startY,</div><div class="line">                sprite.rect.w,</div><div class="line">                sprite.rect.h</div><div class="line">        );</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    DrawCanvas.prototype.clear = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">         <span class="keyword">this</span>.context.clearRect(<span class="number">0</span>,<span class="number">0</span>,<span class="keyword">this</span>.width, <span class="keyword">this</span>.height);   </div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>结合上面两个类，我们就可以再画布上先绘制精灵图的第一帧</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> image = <span class="keyword">new</span> Image();</div><div class="line">    image.src = <span class="string">'/images/bird.png'</span>;</div><div class="line"></div><div class="line">    image.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> bird_opt = &#123;</div><div class="line">                <span class="attr">image</span>: image,</div><div class="line">                <span class="attr">startX</span>: <span class="number">100</span>,</div><div class="line">                <span class="attr">startY</span>: <span class="number">100</span>,</div><div class="line">                <span class="attr">rect</span>: &#123;<span class="attr">x</span>:<span class="number">0</span>,<span class="attr">y</span>:<span class="number">0</span>,<span class="attr">w</span>:<span class="number">86</span>,<span class="attr">h</span>:<span class="number">60</span>&#125;,</div><div class="line">                <span class="attr">frames</span>: [</div><div class="line">                            &#123;<span class="attr">x</span>:<span class="number">0</span>,<span class="attr">y</span>:<span class="number">0</span>,<span class="attr">w</span>:<span class="number">86</span>,<span class="attr">h</span>:<span class="number">60</span>&#125;,</div><div class="line">                            &#123;<span class="attr">x</span>:<span class="number">0</span>,<span class="attr">y</span>:<span class="number">60</span>,<span class="attr">w</span>:<span class="number">86</span>,<span class="attr">h</span>:<span class="number">60</span>&#125;,</div><div class="line">                            &#123;<span class="attr">x</span>:<span class="number">0</span>,<span class="attr">y</span>:<span class="number">120</span>,<span class="attr">w</span>:<span class="number">86</span>,<span class="attr">h</span>:<span class="number">60</span>&#125;</div><div class="line">                        ]</div><div class="line">            &#125;,</div><div class="line">            birdSprite = Sprite(bird_opt),</div><div class="line">            canvas = <span class="built_in">document</span>.getElementById(<span class="string">'canvas'</span>),</div><div class="line">            canvas_opt = &#123;</div><div class="line">                <span class="attr">context</span>: canvas.getContext(<span class="string">'2d'</span>),</div><div class="line">                <span class="attr">width</span>:canvas.width,</div><div class="line">                <span class="attr">height</span>:canvas.height</div><div class="line">            &#125;;</div><div class="line"></div><div class="line">        <span class="keyword">var</span> myCanvas = <span class="keyword">new</span> DrawCanvas(canvas_opt);</div><div class="line">        myCanvas.renderFrame(birdSprite);     </div><div class="line">    &#125;;</div></pre></td></tr></table></figure>
<h4 id="SetInterval-不断地清空画布与绘制图案"><a href="#SetInterval-不断地清空画布与绘制图案" class="headerlink" title="SetInterval 不断地清空画布与绘制图案"></a>SetInterval 不断地清空画布与绘制图案</h4><p>我们需要绘制我们的精灵图，那么我们需要setInterval清空我们的画布，绘制对应帧数的图片。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//canvas上动画的绘制是通过计时器去实现的</span></div><div class="line">        setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            myCanvas.clear();</div><div class="line">            myCanvas.renderFrame(birdSprite); </div><div class="line">        &#125;, <span class="number">200</span>);</div><div class="line"></div><div class="line"><span class="comment">//但其实做动画的最佳循环是使用requestAnimationFrame,所以我们换种写法</span></div></pre></td></tr></table></figure>
<p>注意：我们创建我们的sprite之前我们需要预先将我们使用的图片下载完，所以我们需要</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> image = <span class="keyword">new</span> Image();</div><div class="line">image.src = <span class="string">'/images/bird.png'</span>;</div><div class="line">image.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    .....</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>所以在下一篇文章里我们会看到相关框架里面会实现preload，预先加载所有要使用的资源然后再开始绘制。以上，就是canvas动画主要的实现原理。如果想要我们的动画在不同方向上再进行移动，即我们只要不断更改我们绘制坐标位置即可。</p>
<p><a href="http://www.alloyteam.com/2013/12/canvas-animation-optimized-discussion/" target="_blank" rel="external">拓展阅读1：canvas动画优化小议</a></p>
<p><a href="https://www.html5rocks.com/zh/tutorials/canvas/performance/" target="_blank" rel="external">拓展阅读2：提高 HTML5 画布性能</a></p>
<ul>
<li>拓展阅读里面提到我们对动画可以分层，让不同频率的动画绘制在不同的图层上，同时我们对这一次图层的变化与上一次图层的内容进行对比，找出变化的区域，这也是我们称为的脏区域，这样只要更新脏区域的内容，就能提升canvas的性能了。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Canvas-drawImage&quot;&gt;&lt;a href=&quot;#Canvas-drawImage&quot; class=&quot;headerlink&quot; title=&quot;Canvas.drawImage&quot;&gt;&lt;/a&gt;Canvas.drawImage&lt;/h4&gt;&lt;p&gt;我们知道我们需要调用draw
    
    </summary>
    
      <category term="技术文章" scheme="https://motionvisions.github.io/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="canvas" scheme="https://motionvisions.github.io/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://motionvisions.github.io/2016/12/07/hello-world/"/>
    <id>https://motionvisions.github.io/2016/12/07/hello-world/</id>
    <published>2016-12-06T20:20:10.000Z</published>
    <updated>2016-12-07T01:40:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<p><img src="//img.alicdn.com/tfs/TB1_ZnHNXXXXXXBXpXXXXXXXXXX-900-500.jpg" alt="图标" title="图标"></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
<h2 id="Quick-Start-1"><a href="#Quick-Start-1" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post-1"><a href="#Create-a-new-post-1" class="headerlink" title="Create a new post"></a>Create a new post</h3><h3 id="Create-a-new-post-2"><a href="#Create-a-new-post-2" class="headerlink" title="Create a new post"></a>Create a new post</h3><h3 id="Create-a-new-post-3"><a href="#Create-a-new-post-3" class="headerlink" title="Create a new post"></a>Create a new post</h3><h2 id="Quick-Start-2"><a href="#Quick-Start-2" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post-4"><a href="#Create-a-new-post-4" class="headerlink" title="Create a new post"></a>Create a new post</h3><h3 id="Create-a-new-post-5"><a href="#Create-a-new-post-5" class="headerlink" title="Create a new post"></a>Create a new post</h3><h3 id="Create-a-new-post-6"><a href="#Create-a-new-post-6" class="headerlink" title="Create a new post"></a>Create a new post</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io
    
    </summary>
    
      <category term="技术文章" scheme="https://motionvisions.github.io/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="ADFA tags tags" scheme="https://motionvisions.github.io/tags/ADFA-tags-tags/"/>
    
  </entry>
  
</feed>
